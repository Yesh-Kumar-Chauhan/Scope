import React, { useState } from 'react'
import logoWhite from '../../assets/images/logoWhite.png'
import { useLocation } from 'react-router-dom';
import { NavigationItem } from '../../interface/SideBar'


const DashboardIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg width="24" height="24" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" clipRule="evenodd" d="M2.8 1L2.74967 0.99997C2.52122 0.999752 2.32429 0.999564 2.14983 1.04145C1.60136 1.17312 1.17312 1.60136 1.04145 2.14983C0.999564 2.32429 0.999752 2.52122 0.99997 2.74967L1 2.8V5.2L0.99997 5.25033C0.999752 5.47878 0.999564 5.67572 1.04145 5.85017C1.17312 6.39864 1.60136 6.82688 2.14983 6.95856C2.32429 7.00044 2.52122 7.00025 2.74967 7.00003L2.8 7H5.2L5.25033 7.00003C5.47878 7.00025 5.67572 7.00044 5.85017 6.95856C6.39864 6.82688 6.82688 6.39864 6.95856 5.85017C7.00044 5.67572 7.00025 5.47878 7.00003 5.25033L7 5.2V2.8L7.00003 2.74967C7.00025 2.52122 7.00044 2.32429 6.95856 2.14983C6.82688 1.60136 6.39864 1.17312 5.85017 1.04145C5.67572 0.999564 5.47878 0.999752 5.25033 0.99997L5.2 1H2.8ZM2.38328 2.01382C2.42632 2.00348 2.49222 2 2.8 2H5.2C5.50779 2 5.57369 2.00348 5.61672 2.01382C5.79955 2.05771 5.94229 2.20045 5.98619 2.38328C5.99652 2.42632 6 2.49222 6 2.8V5.2C6 5.50779 5.99652 5.57369 5.98619 5.61672C5.94229 5.79955 5.79955 5.94229 5.61672 5.98619C5.57369 5.99652 5.50779 6 5.2 6H2.8C2.49222 6 2.42632 5.99652 2.38328 5.98619C2.20045 5.94229 2.05771 5.79955 2.01382 5.61672C2.00348 5.57369 2 5.50779 2 5.2V2.8C2 2.49222 2.00348 2.42632 2.01382 2.38328C2.05771 2.20045 2.20045 2.05771 2.38328 2.01382ZM9.8 1L9.74967 0.99997C9.52122 0.999752 9.32429 0.999564 9.14983 1.04145C8.60136 1.17312 8.17312 1.60136 8.04145 2.14983C7.99956 2.32429 7.99975 2.52122 7.99997 2.74967L8 2.8V5.2L7.99997 5.25033C7.99975 5.47878 7.99956 5.67572 8.04145 5.85017C8.17312 6.39864 8.60136 6.82688 9.14983 6.95856C9.32429 7.00044 9.52122 7.00025 9.74967 7.00003L9.8 7H12.2L12.2503 7.00003C12.4788 7.00025 12.6757 7.00044 12.8502 6.95856C13.3986 6.82688 13.8269 6.39864 13.9586 5.85017C14.0004 5.67572 14.0003 5.47878 14 5.25033L14 5.2V2.8L14 2.74967C14.0003 2.52122 14.0004 2.32429 13.9586 2.14983C13.8269 1.60136 13.3986 1.17312 12.8502 1.04145C12.6757 0.999564 12.4788 0.999752 12.2503 0.99997L12.2 1H9.8ZM9.38328 2.01382C9.42632 2.00348 9.49222 2 9.8 2H12.2C12.5078 2 12.5737 2.00348 12.6167 2.01382C12.7995 2.05771 12.9423 2.20045 12.9862 2.38328C12.9965 2.42632 13 2.49222 13 2.8V5.2C13 5.50779 12.9965 5.57369 12.9862 5.61672C12.9423 5.79955 12.7995 5.94229 12.6167 5.98619C12.5737 5.99652 12.5078 6 12.2 6H9.8C9.49222 6 9.42632 5.99652 9.38328 5.98619C9.20045 5.94229 9.05771 5.79955 9.01382 5.61672C9.00348 5.57369 9 5.50779 9 5.2V2.8C9 2.49222 9.00348 2.42632 9.01382 2.38328C9.05771 2.20045 9.20045 2.05771 9.38328 2.01382ZM2.74967 7.99997L2.8 8H5.2L5.25033 7.99997C5.47878 7.99975 5.67572 7.99956 5.85017 8.04145C6.39864 8.17312 6.82688 8.60136 6.95856 9.14983C7.00044 9.32429 7.00025 9.52122 7.00003 9.74967L7 9.8V12.2L7.00003 12.2503C7.00025 12.4788 7.00044 12.6757 6.95856 12.8502C6.82688 13.3986 6.39864 13.8269 5.85017 13.9586C5.67572 14.0004 5.47878 14.0003 5.25033 14L5.2 14H2.8L2.74967 14C2.52122 14.0003 2.32429 14.0004 2.14983 13.9586C1.60136 13.8269 1.17312 13.3986 1.04145 12.8502C0.999564 12.6757 0.999752 12.4788 0.99997 12.2503L1 12.2V9.8L0.99997 9.74967C0.999752 9.52122 0.999564 9.32429 1.04145 9.14983C1.17312 8.60136 1.60136 8.17312 2.14983 8.04145C2.32429 7.99956 2.52122 7.99975 2.74967 7.99997ZM2.8 9C2.49222 9 2.42632 9.00348 2.38328 9.01382C2.20045 9.05771 2.05771 9.20045 2.01382 9.38328C2.00348 9.42632 2 9.49222 2 9.8V12.2C2 12.5078 2.00348 12.5737 2.01382 12.6167C2.05771 12.7995 2.20045 12.9423 2.38328 12.9862C2.42632 12.9965 2.49222 13 2.8 13H5.2C5.50779 13 5.57369 12.9965 5.61672 12.9862C5.79955 12.9423 5.94229 12.7995 5.98619 12.6167C5.99652 12.5737 6 12.5078 6 12.2V9.8C6 9.49222 5.99652 9.42632 5.98619 9.38328C5.94229 9.20045 5.79955 9.05771 5.61672 9.01382C5.57369 9.00348 5.50779 9 5.2 9H2.8ZM9.8 8L9.74967 7.99997C9.52122 7.99975 9.32429 7.99956 9.14983 8.04145C8.60136 8.17312 8.17312 8.60136 8.04145 9.14983C7.99956 9.32429 7.99975 9.52122 7.99997 9.74967L8 9.8V12.2L7.99997 12.2503C7.99975 12.4788 7.99956 12.6757 8.04145 12.8502C8.17312 13.3986 8.60136 13.8269 9.14983 13.9586C9.32429 14.0004 9.52122 14.0003 9.74967 14L9.8 14H12.2L12.2503 14C12.4788 14.0003 12.6757 14.0004 12.8502 13.9586C13.3986 13.8269 13.8269 13.3986 13.9586 12.8502C14.0004 12.6757 14.0003 12.4788 14 12.2503L14 12.2V9.8L14 9.74967C14.0003 9.52122 14.0004 9.32429 13.9586 9.14983C13.8269 8.60136 13.3986 8.17312 12.8502 8.04145C12.6757 7.99956 12.4788 7.99975 12.2503 7.99997L12.2 8H9.8ZM9.38328 9.01382C9.42632 9.00348 9.49222 9 9.8 9H12.2C12.5078 9 12.5737 9.00348 12.6167 9.01382C12.7995 9.05771 12.9423 9.20045 12.9862 9.38328C12.9965 9.42632 13 9.49222 13 9.8V12.2C13 12.5078 12.9965 12.5737 12.9862 12.6167C12.9423 12.7995 12.7995 12.9423 12.6167 12.9862C12.5737 12.9965 12.5078 13 12.2 13H9.8C9.49222 13 9.42632 12.9965 9.38328 12.9862C9.20045 12.9423 9.05771 12.7995 9.01382 12.6167C9.00348 12.5737 9 12.5078 9 12.2V9.8C9 9.49222 9.00348 9.42632 9.01382 9.38328C9.05771 9.20045 9.20045 9.05771 9.38328 9.01382Z" fill="#ffffff"></path> </g>
        <path
            stroke={stroke} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"
        />
    </svg>
);
const DistrictIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path
            d="M2.36136 4.80019L19.0659 21.6708M2.36136 4.80019C2.98287 4.06618 3.91116 3.60019 4.94829 3.60019H10.5954M2.36136 4.80019C1.86148 5.39055 1.56006 6.15429 1.56006 6.98843V19.412C1.56006 21.2832 3.07702 22.8002 4.94829 22.8002H17.3718C19.2431 22.8002 20.7601 21.2832 20.7601 19.412V14.3296M10.5954 14.3296L3.25418 21.6708M18.6001 5.04019V4.96801M22.4401 4.95672C22.4401 7.46106 18.6001 10.8002 18.6001 10.8002C18.6001 10.8002 14.7601 7.46106 14.7601 4.95672C14.7601 2.88205 16.4793 1.2002 18.6001 1.2002C20.7208 1.2002 22.4401 2.88205 22.4401 4.95672Z"
            stroke={stroke} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"
        />
    </svg>
);

const SitesIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
        viewBox="0 0 24 24" fill="none">
        <path
            d="M11.9999 14.3999L11.3437 15.1545C11.72 15.4817 12.2798 15.4817 12.6561 15.1545L11.9999 14.3999ZM6.87308 15.2542C7.40436 15.1033 7.71274 14.5503 7.56186 14.0191C7.41099 13.4878 6.858 13.1794 6.32672 13.3303L6.87308 15.2542ZM17.6731 13.3303C17.1418 13.1794 16.5888 13.4878 16.4379 14.0191C16.2871 14.5503 16.5954 15.1033 17.1267 15.2542L17.6731 13.3303ZM15.7999 7.09555C15.7999 7.64012 15.5846 8.31631 15.1704 9.08156C14.7635 9.83343 14.2084 10.5919 13.6328 11.2801C13.06 11.9649 12.4844 12.5597 12.0506 12.984C11.8343 13.1955 11.6549 13.3633 11.5306 13.4771C11.4686 13.534 11.4204 13.5773 11.3884 13.6058C11.3725 13.62 11.3606 13.6305 11.353 13.6372C11.3492 13.6405 11.3465 13.6428 11.345 13.6442C11.3442 13.6449 11.3437 13.6453 11.3435 13.6455C11.3434 13.6456 11.3434 13.6456 11.3434 13.6456C11.3434 13.6456 11.3435 13.6455 11.3435 13.6455C11.3436 13.6454 11.3437 13.6453 11.9999 14.3999C12.6561 15.1545 12.6562 15.1544 12.6564 15.1542C12.6565 15.1542 12.6567 15.154 12.6568 15.1538C12.6572 15.1536 12.6576 15.1532 12.6581 15.1528C12.659 15.152 12.6602 15.1509 12.6618 15.1495C12.6648 15.1469 12.669 15.1432 12.6743 15.1385C12.6849 15.1292 12.7 15.1159 12.7192 15.0988C12.7575 15.0646 12.8125 15.0152 12.8817 14.9518C13.0199 14.8251 13.2155 14.6423 13.4492 14.4136C13.9154 13.9575 14.5398 13.3131 15.167 12.5632C15.7914 11.8166 16.4363 10.9446 16.9294 10.0335C17.4152 9.13567 17.7999 8.1162 17.7999 7.09555H15.7999ZM11.9999 14.3999C12.6561 13.6453 12.6562 13.6454 12.6563 13.6455C12.6563 13.6455 12.6564 13.6456 12.6564 13.6456C12.6564 13.6456 12.6564 13.6456 12.6563 13.6455C12.6561 13.6453 12.6556 13.6449 12.6548 13.6442C12.6533 13.6428 12.6506 13.6405 12.6468 13.6372C12.6392 13.6305 12.6273 13.62 12.6114 13.6058C12.5794 13.5773 12.5312 13.534 12.4692 13.4771C12.3449 13.3633 12.1655 13.1955 11.9492 12.984C11.5154 12.5597 10.9398 11.9649 10.367 11.2801C9.79141 10.5919 9.23627 9.83343 8.82938 9.08156C8.41524 8.31631 8.1999 7.64012 8.1999 7.09555H6.1999C6.1999 8.1162 6.58457 9.13567 7.07043 10.0335C7.56354 10.9446 8.20839 11.8166 8.83283 12.5632C9.46004 13.3131 10.0844 13.9575 10.5506 14.4136C10.7843 14.6423 10.9799 14.8251 11.1181 14.9518C11.1873 15.0152 11.2423 15.0646 11.2806 15.0988C11.2998 15.1159 11.3149 15.1292 11.3255 15.1385C11.3308 15.1432 11.335 15.1469 11.338 15.1495C11.3396 15.1509 11.3408 15.152 11.3417 15.1528C11.3422 15.1532 11.3426 15.1536 11.343 15.1538C11.3431 15.154 11.3433 15.1542 11.3434 15.1542C11.3436 15.1544 11.3437 15.1545 11.9999 14.3999ZM8.1999 7.09555C8.1999 5.07511 9.88039 3.3999 11.9999 3.3999V1.3999C8.81749 1.3999 6.1999 3.92933 6.1999 7.09555H8.1999ZM11.9999 3.3999C14.1194 3.3999 15.7999 5.07511 15.7999 7.09555H17.7999C17.7999 3.92933 15.1823 1.3999 11.9999 1.3999V3.3999ZM20.5999 17.5999C20.5999 17.8038 20.5049 18.0886 20.1437 18.4445C19.7789 18.8038 19.1998 19.1735 18.4035 19.5053C16.8153 20.167 14.5518 20.5999 11.9999 20.5999V22.5999C14.7499 22.5999 17.2865 22.1374 19.1727 21.3514C20.1137 20.9593 20.9405 20.467 21.5473 19.8693C22.1576 19.268 22.5999 18.5005 22.5999 17.5999H20.5999ZM11.9999 20.5999C9.44796 20.5999 7.18453 20.167 5.59629 19.5053C4.79999 19.1735 4.22087 18.8038 3.8561 18.4445C3.49486 18.0886 3.3999 17.8038 3.3999 17.5999H1.3999C1.3999 18.5005 1.8422 19.268 2.45253 19.8693C3.05934 20.467 3.88611 20.9593 4.82706 21.3514C6.71334 22.1374 9.2499 22.5999 11.9999 22.5999V20.5999ZM3.3999 17.5999C3.3999 17.3489 3.55094 16.9617 4.15965 16.4925C4.75833 16.0311 5.67851 15.5934 6.87308 15.2542L6.32672 13.3303C4.98597 13.711 3.80615 14.2398 2.93866 14.9085C2.0812 15.5694 1.3999 16.476 1.3999 17.5999H3.3999ZM17.1267 15.2542C18.3213 15.5934 19.2415 16.0311 19.8402 16.4925C20.4489 16.9617 20.5999 17.3489 20.5999 17.5999H22.5999C22.5999 16.476 21.9186 15.5694 21.0611 14.9085C20.1936 14.2398 19.0138 13.711 17.6731 13.3303L17.1267 15.2542Z"
            fill={stroke} />
    </svg>
);
const PersonnelIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M19.1999 13.6855C20.4672 14.6324 21.5999 17.0165 21.5999 18.4855C21.5999 18.9431 21.266 19.3141 20.8541 19.3141H20.3999M15.5999 9.80432C16.4197 9.33006 16.9713 8.44365 16.9713 7.4284C16.9713 6.41316 16.4197 5.52675 15.5999 5.05249M3.14567 19.3141H16.2827C16.6946 19.3141 17.0285 18.9431 17.0285 18.4855C17.0285 15.6089 14.6252 13.2769 9.71419 13.2769C4.80317 13.2769 2.3999 15.6089 2.3999 18.4855C2.3999 18.9431 2.7338 19.3141 3.14567 19.3141ZM12.457 7.4284C12.457 8.94324 11.229 10.1713 9.71419 10.1713C8.19935 10.1713 6.97133 8.94324 6.97133 7.4284C6.97133 5.91357 8.19935 4.68555 9.71419 4.68555C11.229 4.68555 12.457 5.91357 12.457 7.4284Z"
            stroke={stroke} stroke-width="2" stroke-linecap="round" />
    </svg>
);
const ReportsIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M11.5202 6.2399V9.1199C11.5202 9.6501 11.95 10.0799 12.4802 10.0799H15.3602M17.2802 2.3999H10.56C9.49958 2.3999 8.63997 3.25951 8.63996 4.31989V6.2399M17.2802 2.3999H17.8157C18.0861 2.3999 18.3434 2.51377 18.5297 2.70973C18.8096 3.0042 19.2529 3.45762 19.6802 3.8399C20.015 4.13952 20.5411 4.67722 20.8562 5.00401C21.0265 5.18073 21.1202 5.4167 21.1202 5.66217L21.1202 6.2399M17.2802 2.3999V5.2799C17.2802 5.8101 17.71 6.2399 18.2402 6.2399H21.1202M21.1202 6.2399L21.1199 15.8399C21.1199 16.9003 20.2603 17.7599 19.1999 17.7599H15.3599M13.9202 7.6799C13.4929 7.29762 13.0496 6.84421 12.7697 6.54973C12.5834 6.35377 12.3261 6.2399 12.0557 6.2399H4.79996C3.73958 6.2399 2.87996 7.09951 2.87996 8.15989L2.87988 19.6799C2.87988 20.7402 3.73949 21.5999 4.79988 21.5999L13.4399 21.5999C14.5003 21.5999 15.3599 20.7403 15.3599 19.6799L15.3602 9.50217C15.3602 9.2567 15.2665 9.02073 15.0962 8.84401C14.7811 8.51722 14.255 7.97952 13.9202 7.6799Z"
            stroke={stroke} stroke-width="2" stroke-linecap="round"
            stroke-linejoin="round" />
    </svg>
);
const SchoolIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
        viewBox="0 0 24 24" fill="none">
        <g clip-path="url(#clip0_583_3742)">
            <path
                d="M12 3L1 9L5 11.18V17.18L12 21L19 17.18V11.18L21 10.09V17H23V9L12 3ZM18.82 9L12 12.72L5.18 9L12 5.28L18.82 9ZM17 15.99L12 18.72L7 15.99V12.27L12 15L17 12.27V15.99Z"
                fill={stroke} />
        </g>
        <defs>
            <clipPath id="clip0_583_3742">
                <rect width="24" height="24" fill={stroke} />
            </clipPath>
        </defs>
    </svg>
);
const InserviceIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M7.7999 19.2002V8.4002M15.5999 19.2002V8.4002M8.3999 7.8002V5.4002C8.3999 4.73745 8.93716 4.2002 9.5999 4.2002H13.7999C14.4626 4.2002 14.9999 4.73745 14.9999 5.4002V7.8002M4.7999 19.8002H19.1999C20.5254 19.8002 21.5999 18.7257 21.5999 17.4002V10.2002C21.5999 8.87471 20.5254 7.8002 19.1999 7.8002H4.7999C3.47442 7.8002 2.3999 8.87471 2.3999 10.2002V17.4002C2.3999 18.7257 3.47442 19.8002 4.7999 19.8002Z"
            stroke={stroke} stroke-width="2" stroke-linecap="round" />
    </svg>
);
const ClosingIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M11.9999 12.9706V8.13227M11.9999 16.5568V16.5994M18.0478 20.629H5.95198C4.29975 20.629 2.90542 19.5247 2.46673 18.014C2.27947 17.3691 2.50956 16.6974 2.86151 16.1255L8.90944 5.09755C10.3264 2.79496 13.6734 2.79496 15.0904 5.09755L21.1383 16.1255C21.4902 16.6974 21.7203 17.3691 21.5331 18.014C21.0944 19.5247 19.7001 20.629 18.0478 20.629Z"
            stroke={stroke} stroke-width="2" stroke-linecap="round"
            stroke-linejoin="round" />
    </svg>
);

const VisitsIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M11.9999 17V9V3L17.3999 7.2L12.5999 10.8M8.3999 13.2908C4.88171 13.8841 2.3999 15.3213 2.3999 17C2.3999 19.2091 6.69797 21 11.9999 21C17.3018 21 21.5999 19.2091 21.5999 17C21.5999 15.3213 19.1181 13.8841 15.5999 13.2908"
            stroke={stroke} stroke-width="2" stroke-linecap="round"
            stroke-linejoin="round" />
    </svg>
);
const StatusIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <g opacity="0.9">
            <path
                d="M17.9999 11.9999C17.9999 14.9744 15.8355 17.4433 12.9957 17.9176C12.451 18.0086 11.9999 17.5522 11.9999 16.9999V6.9999C11.9999 6.44762 12.451 5.99117 12.9957 6.08216C15.8355 6.55651 17.9999 9.02544 17.9999 11.9999Z"
                stroke={stroke} stroke-width="2" />
            <path fill-rule="evenodd" clipRule="evenodd"
                d="M21.5999 11.9999C21.5999 17.3018 17.3018 21.5999 11.9999 21.5999C6.69797 21.5999 2.3999 17.3018 2.3999 11.9999C2.3999 6.69797 6.69797 2.3999 11.9999 2.3999C17.3018 2.3999 21.5999 6.69797 21.5999 11.9999Z"
                stroke={stroke} stroke-width="2" />
        </g>
    </svg>
);
const ContactIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M5.3999 19.1999C5.86107 18.6834 8.02095 16.3066 8.65391 16.3066H15.3463C16.2635 16.3066 18.1359 18.2768 18.5999 18.9713M21.5999 11.9999C21.5999 17.3018 17.3018 21.5999 11.9999 21.5999C6.69797 21.5999 2.3999 17.3018 2.3999 11.9999C2.3999 6.69797 6.69797 2.3999 11.9999 2.3999C17.3018 2.3999 21.5999 6.69797 21.5999 11.9999ZM15.4387 8.72786C15.4387 6.89635 13.8926 5.3999 12.0002 5.3999C10.1078 5.3999 8.56164 6.89635 8.56164 8.72786C8.56164 10.5594 10.1078 12.0558 12.0002 12.0558C13.8926 12.0558 15.4387 10.5594 15.4387 8.72786Z"
            stroke={stroke} stroke-width="2" />
    </svg>
);
const WorkshopIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
        fill="none">
        <path
            d="M7.1999 11.4V10.2M11.9999 11.4V9M16.7999 11.4V6.6M9.5999 16.2L7.7999 21M16.5935 20.9333L14.4722 16.2664M4.7999 16.2C3.47442 16.2 2.3999 15.1255 2.3999 13.8V5.4C2.3999 4.07452 3.47442 3 4.7999 3H19.1999C20.5254 3 21.5999 4.07452 21.5999 5.4V13.8C21.5999 15.1255 20.5254 16.2 19.1999 16.2H4.7999Z"
            stroke={stroke} stroke-width="2" stroke-linecap="round"
            stroke-linejoin="round" />
    </svg>
);
const BulkTimeSheetIcon: React.FC<{ stroke?: string }> = ({ stroke = 'currentColor' }) => (
    <svg viewBox="0 0 23 23" width="24" height="24" id="meteor-icon-kit__regular-bulk-edit" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill-rule="evenodd" clipRule="evenodd" d="M10 18H8C6.34315 18 5 16.6569 5 15V13H3C1.34315 13 0 11.6569 0 10V3C0 1.34315 1.34315 0 3 0H10C11.6569 0 13 1.34315 13 3V5H15C16.6569 5 18 6.34315 18 8V10H20C21.6569 10 23 11.3431 23 13V20C23 21.6569 21.6569 23 20 23H13C11.3431 23 10 21.6569 10 20V18ZM10 16V13C10 11.3431 11.3431 10 13 10H16V8C16 7.44772 15.5523 7 15 7H8C7.44772 7 7 7.44772 7 8V15C7 15.5523 7.44772 16 8 16H10ZM5 11V8C5 6.34315 6.34315 5 8 5H11V3C11 2.44772 10.5523 2 10 2H3C2.44772 2 2 2.44772 2 3V10C2 10.5523 2.44772 11 3 11H5ZM13 12C12.4477 12 12 12.4477 12 13V20C12 20.5523 12.4477 21 13 21H20C20.5523 21 21 20.5523 21 20V13C21 12.4477 20.5523 12 20 12H13Z" fill={stroke}></path></g></svg>
);

const navigationItems: NavigationItem[] = [
    {
        path: '/dashboard',
        label: 'Dashboard',
        icon: DashboardIcon,
    },
    {
        path: '/personnel',
        label: 'Personnel',
        icon: PersonnelIcon,
    },
    {
        path: '/district',
        label: 'District',
        icon: DistrictIcon,
    },
    {
        path: '/site',
        label: 'Sites',
        icon: SitesIcon,
    },
    {
        path: '/school',
        label: 'School',
        icon: SchoolIcon,
    },
        {
        path: '/bulkTimeSheet',
        label: 'BulkTimeSheet',
        icon: BulkTimeSheetIcon,
    },
    {
        path: '/report',
        label: 'Reports',
        icon: ReportsIcon,
    },
    {
        path: '/inservice',
        label: 'Inservice',
        icon: InserviceIcon,
    },
    {
        path: '/closing',
        label: 'Closing',
        icon: ClosingIcon,
    },
    {
        path: '/visits',
        label: 'Visits',
        icon: VisitsIcon,
    },
    {
        path: '/contact',
        label: 'Contact',
        icon: ContactIcon,
    },
    {
        path: '/status',
        label: 'Status',
        icon: StatusIcon,
    },

    {
        path: '/workshop',
        label: 'Workshop',
        icon: WorkshopIcon,
    },
];

interface SidebarProps {
    onNavigate: (path: string, label: string) => void;
}

interface SidebarProps {
    onNavigate: (route: string, title: string) => void;
    onLogout: any;
    isSidebarVisible: boolean;
    onToggleSidebar: () => void;
}
const Sidebar: React.FC<SidebarProps> = ({ onNavigate, onLogout, isSidebarVisible, onToggleSidebar }) => {
    const location = useLocation();


    const isActive = (path: string) => location.pathname === path;
    return (
        <>
            <div className={`${isSidebarVisible ? 'sidebarCol' : 'sidebarCol show'}`}>
                <div className="close d-lg-none d-md-block d-block">
                    <svg onClick={onToggleSidebar} viewBox="0 -0.5 25 25" width="30px" height="30px" fill="none"
                        xmlns="http://www.w3.org/2000/svg">
                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                        <g id="SVGRepo_iconCarrier">
                            <path
                                d="M6.96967 16.4697C6.67678 16.7626 6.67678 17.2374 6.96967 17.5303C7.26256 17.8232 7.73744 17.8232 8.03033 17.5303L6.96967 16.4697ZM13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697L13.0303 12.5303ZM11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303L11.9697 11.4697ZM18.0303 7.53033C18.3232 7.23744 18.3232 6.76256 18.0303 6.46967C17.7374 6.17678 17.2626 6.17678 16.9697 6.46967L18.0303 7.53033ZM13.0303 11.4697C12.7374 11.1768 12.2626 11.1768 11.9697 11.4697C11.6768 11.7626 11.6768 12.2374 11.9697 12.5303L13.0303 11.4697ZM16.9697 17.5303C17.2626 17.8232 17.7374 17.8232 18.0303 17.5303C18.3232 17.2374 18.3232 16.7626 18.0303 16.4697L16.9697 17.5303ZM11.9697 12.5303C12.2626 12.8232 12.7374 12.8232 13.0303 12.5303C13.3232 12.2374 13.3232 11.7626 13.0303 11.4697L11.9697 12.5303ZM8.03033 6.46967C7.73744 6.17678 7.26256 6.17678 6.96967 6.46967C6.67678 6.76256 6.67678 7.23744 6.96967 7.53033L8.03033 6.46967ZM8.03033 17.5303L13.0303 12.5303L11.9697 11.4697L6.96967 16.4697L8.03033 17.5303ZM13.0303 12.5303L18.0303 7.53033L16.9697 6.46967L11.9697 11.4697L13.0303 12.5303ZM11.9697 12.5303L16.9697 17.5303L18.0303 16.4697L13.0303 11.4697L11.9697 12.5303ZM13.0303 11.4697L8.03033 6.46967L6.96967 7.53033L11.9697 12.5303L13.0303 11.4697Z"
                                fill="#fff"></path>
                        </g>
                    </svg>
                </div>
                <aside className=" p-xl-3 p-lg-3 p-md-3 p-sm-3 p-3 sidebar">
                    <div className="logo text-lg-center text-md-start text-start">
                        <img src={logoWhite} alt="" />
                    </div>
                    <div className="seprator mx-lg-auto mx-md-auto mx-0"></div>

                    <ul className="sidebarMenu d-flex flex-column gap-3">
                        {navigationItems.map((item) => (
                            <li key={item.path} style={{ cursor: 'pointer' }}>
                                <a className={`d-flex gap-3 p-2 align-items-center ${isActive(item.path) ? 'active' : ''}`}
                                    onClick={() => onNavigate(item.path, item.label)}>
                                    <item.icon stroke={isActive(item.path) ? 'black' : 'white'} />
                                    {item.label}
                                </a>
                            </li>
                        ))}


                        <li style={{ cursor: 'pointer' }}>
                            <a className="d-flex gap-3 p-2 align-items-center" onClick={onLogout}>
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                    <mask id="mask0_1063_5788" style={{ maskType: 'alpha' }} maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24">
                                        <rect width="24" height="24" fill="#D9D9D9" />
                                    </mask>
                                    <g mask="url(#mask0_1063_5788)">
                                        <path d="M5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H12V5H5V19H12V21H5ZM16 17L14.625 15.55L17.175 13H9V11H17.175L14.625 8.45L16 7L21 12L16 17Z" fill="#FCFCFC" />
                                    </g>
                                </svg>
                                Log Out
                            </a>
                        </li>
                    </ul>
                </aside>
            </div ></>
    )
}

export default Sidebar